// Generated by CoffeeScript 1.5.0
(function() {
  var FileAsset, Fs, Path, log, mkdirp;

  Fs = require("fs");

  Path = require("path");

  mkdirp = require("mkdirp");

  log = require("../common/logger").getLogger("FileAsset");

  Function.prototype.property = function(prop, desc) {
    return Object.defineProperty(this.prototype, prop, desc);
  };

  FileAsset = (function() {

    function FileAsset(options) {
      var cwd, filename, text;
      filename = options.filename, cwd = options.cwd, text = options.text;
      this.originalFilename = filename;
      this.filename = filename;
      this._extname = Path.extname(filename);
      this.dirname = Path.dirname(filename);
      this.basename = Path.basename(filename);
      this.cwd = cwd;
      this._text = text;
    }

    FileAsset.property("text", {
      get: function() {
        return this._text;
      },
      set: function(text) {
        return this._text = text;
      }
    });

    FileAsset.property("extname", {
      get: function() {
        return this._extname;
      },
      set: function(ext) {
        this.basename = Path.basename(this.basename, this._extname) + ext;
        this.filename = Path.join(this.dirname, this.basename);
        return this._extname = ext;
      }
    });

    FileAsset.prototype.toString = function() {
      return "originalFilename: " + this.originalFilename + "\nfilename: " + this.filename + "\nextname: " + this.extname + "\ndirname: " + this.dirname + "\nbasename: " + this.basename + "\ntext: " + this.text + "\n==============================================================================";
    };

    FileAsset.prototype.read = function(cb) {
      return Fs.readFile(this.filename, PROJMATE.encoding, cb);
    };

    FileAsset.prototype.write = function(filename, cb) {
      var text;
      if (filename == null) {
        filename = this.filename;
      }
      text = this.text;
      if (text.length === 0) {
        return cb();
      }
      return mkdirp(Path.dirname(filename), function(err) {
        if (err) {
          return cb(err);
        }
        return Fs.writeFile(filename, text, PROJMATE.encoding, function(err) {
          if (err) {
            return cb(err);
          }
          log.info("Wrote " + filename);
          return cb();
        });
      });
    };

    return FileAsset;

  })();

  module.exports = FileAsset;

}).call(this);
