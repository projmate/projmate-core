// Generated by CoffeeScript 1.5.0
(function() {
  var Assetx, assert, fileContains, getResource, path, x, _ref;

  assert = require("chai").assert;

  Assetx = require("..");

  path = require("path");

  _ref = require("./helpers"), getResource = _ref.getResource, fileContains = _ref.fileContains;

  x = null;

  describe("assetx", function() {
    before(function() {
      var app, assetx;
      app = {
        version: "3.0.x"
      };
      assetx = new Assetx({
        baseDir: __dirname,
        outputDir: path.join(__dirname, 'output')
      });
      return assetx.attach({
        app: app
      }, function(err) {
        return x = app.locals.x;
      });
    });
    it("should compile coffee", function() {
      var filename, out;
      out = x.script("res/test.js");
      filename = getResource(out);
      assert.isTrue(out.indexOf("--") > 0);
      return assert.isTrue(fileContains(filename, /var sum/));
    });
    it("should passthrough unknown extension", function() {
      var filename, out;
      out = x.script("res/test.txt");
      filename = getResource(out);
      assert.isTrue(out.indexOf("--") > 0);
      return assert.isTrue(fileContains(filename, /plaintext/));
    });
    it("should compile less", function() {
      var filename, out;
      out = x.stylesheet("res/test.css");
      filename = getResource(out);
      assert.isTrue(out.indexOf("--") > 0);
      return assert.isTrue(fileContains(filename, /red/));
    });
    it("should compile stitch directory", function() {
      var filename, out;
      out = x.script("res/foo.js");
      assert.isTrue(out.indexOf("--") > 0);
      filename = getResource(out);
      assert.isTrue(fileContains(filename, /var s/));
      return assert.isTrue(fileContains(filename, /t\.html\(\)/));
    });
    it("should compile funcd", function() {
      var filename, out;
      out = x.stylesheet("res/funcd.html");
      assert.isTrue(out.indexOf("--") > 0);
      filename = getResource(out);
      return assert.isTrue(fileContains(filename, /<body>/));
    });
    return it("should compile stylus", function() {
      var filename, out;
      out = x.stylesheet("res/stylus.css");
      assert.isTrue(out.indexOf("--") > 0);
      filename = getResource(out);
      return assert.isTrue(fileContains(filename, /padding:10px 5px/));
    });
  });

}).call(this);
